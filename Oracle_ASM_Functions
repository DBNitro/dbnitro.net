#
Author="Andre Augusto Ribas"
SoftwareVersion="1.0.3"
DateCreation="18/08/2021"
DateModification="16/03/2022"
EMAIL_1="dba.ribas@gmail.com"
EMAIL_2="andre.ribas@icloud.com"
WEBSITE="http://dbnitro.net"
#
function SepLine() {
printf '%*s\n' "${COLUMNS:-$(tput cols)}" '' | tr ' ' -  
}
#
function SetClear() {
printf "\033c"
}
#
function ASM_HELP() {
SetClear
SepLine
echo -e "\
|#[ ASM_001 ] ASM: VERIFY INSTANCE PARAMETERS                         |#|[ ASM_002 ] ASM: VERIFY OPERATION                            |#|
|#[ ASM_003 ] ASM: VERIFY DISKS AND GROUPS                            |#|[ ASM_004 ] ASM: VERIFY DISK STATE AND COMPATIBILITY         |#|
|#[ ASM_005 ] ASM: VERIFY GENERAL INFO                                |#|[ ASM_006 ] ASM: VERIFY LIBRARY                              |#|
|#[ ASM_007 ] ASM: VERIFY DISK GROUP SUMMARY                          |#|[ ASM_008 ] ASM: VERIFY DISK GROUP USAGE                     |#|
|#[ ASM_009 ] ASM: REMOVING ALL ARCHIVELOGS FROM ASM                  |#|[ ASM_010 ] ASM: VERIFY DISK GROUP SIZE AND USAGE            |#|
|#[ ASM_011 ] ASM: VERIFY DISK GROUP SIZE AND USAGE DETAILS           |#|[ ASM_012 ] ASM: VERIFY ALL DISKGROUPS CONTENTS              |#|
|#[ ASM_013 ] ASM: VERIFY OPERATION DETAIL                            |#|[ ASM_014 ] ASM: VERIFY DISKS SIZE AND STATUS                |#|
|#[ ASM_015 ] ASM: FILES THAT ARE NOTE IN USE CURRENTLY ON ASM DISKS  |#|[ ASM_016 ] ASM: VERIFY DISKS TYPE AND STATUS                |#|
|#[ ASM_017 ] ASM: VERIFY DISKS READ AND WRITE VALUES                 |#|[ ASM_018 ] ASM: VERIFY FILES IN ASM NOT KNOWN TO DATABASE   |#|
|#[ ASM_019 ] ASM: VERIFY DISK GROUP % USAGE                          |#|[ ASM_020 ] ASM: VERIFY DISK GROUPS FREE SPACE               |#|
|#[ ASM_021 ]                                                         |#|[ ASM_022 ] ASM: VERIFY CANDIDATE DISKS                      |#|
|#[ ASM_023 ] ASM: VERIFY PATH AND ALOCATED SIZE                      |#|[ ASM_024 ] ASM: EACH FOLDER UTILIZATION IN MB BY DISKGROUP  |#|
|#[ ASM_025 ] ASM: BLOCKER IN ASM                                     |#|[ ASM_026 ]                                                  |#|"
}
#
#########################################################################################################
#
# ASM Funtions
#
#########################################################################################################
# ASM: VERIFY INSTANCE PARAMETERS
#########################################################################################################
#
function ASM_001() {
sqlplus -S / as sysdba <<EOF
set pages 700 lines 700 timing on long 9999999 numwidth 20 heading on echo on verify on feedback on colsep '|'
prompt ##############################################################
prompt # ASM: VERIFY INSTANCE PARAMETERS
prompt ##############################################################
prompt
col name for a40
col value for a60
col description for a75
select name, type, value, description from v\$parameter order by 1;
quit;
EOF
}
#
#########################################################################################################
# ASM: VERIFY OPERATION
#########################################################################################################
#
function ASM_002() {
sqlplus -S / as sysdba <<EOF
set pages 700 lines 700 timing on long 9999999 numwidth 20 heading on echo on verify on feedback on colsep '|'
prompt ##############################################################
prompt # ASM: VERIFY OPERATION
prompt ##############################################################
prompt
select * from v\$asm_operation;
quit;
EOF
}
#
#########################################################################################################
# ASM: VERIFY DISKS AND GROUPS
#########################################################################################################
#
function ASM_003() {
sqlplus -S / as sysdba <<EOF
set pages 700 lines 700 timing on long 9999999 numwidth 20 heading on echo on verify on feedback on colsep '|'
prompt ##############################################################
prompt # ASM: VERIFY DISKS AND GROUPS
prompt ##############################################################
prompt
col path for a50;
SELECT GROUP_NUMBER
  , DISK_NUMBER
  , NAME
  , PATH
  , FAILGROUP 
  , VOTING_FILE AS VOTING
  , header_status
  , MOUNT_STATUS
  , MODE_STATUS
  , STATE
FROM V\$ASM_DISK 
ORDER BY 1,2,3;
quit;
EOF
}
#
#########################################################################################################
# ASM: VERIFY DISK STATE AND COMPATIBILITY
#########################################################################################################
#
function ASM_004() {
sqlplus -S / as sysdba <<EOF
set pages 700 lines 700 timing on long 9999999 numwidth 20 heading on echo on verify on feedback on colsep '|'
prompt ##############################################################
prompt # ASM: VERIFY DISK STATE AND COMPATIBILITY
prompt ##############################################################
prompt
col compatibility for a13
col database_compatibility for a22
select GROUP_NUMBER
  , NAME
  , TOTAL_MB
  , FREE_MB
  , STATE
  , COMPATIBILITY
  , DATABASE_COMPATIBILITY 
from v\$asm_diskgroup;
quit;
EOF
}
#
#########################################################################################################
# ASM: VERIFY GENERAL INFO
#########################################################################################################
#
function ASM_005() {
sqlplus -S / as sysdba <<EOF
set pages 700 lines 700 timing on long 9999999 numwidth 20 heading on echo on verify on feedback on colsep '|'
prompt ##############################################################
prompt # ASM: VERIFY GENERAL INFO
prompt ##############################################################
prompt
col instance_name for a30
col cluster_name for a30
col db_name for a20
col software_version for a20
col compatible_version for a20
select * from v\$asm_client
order by 1,2,3;
quit;
EOF
}
#
#########################################################################################################
# ASM: VERIFY LIBRARY
#########################################################################################################
#
function ASM_006() {
sqlplus -S / as sysdba <<EOF
set pages 700 lines 700 timing on long 9999999 numwidth 20 heading on echo on verify on feedback on colsep '|'
prompt ##############################################################
prompt # ASM: VERIFY LIBRARY
prompt ##############################################################
prompt
col path for a40
select name
  , path
  , library 
from v\$asm_disk 
where group_number <> 0;
quit;
EOF
}
#
#########################################################################################################
# ASM: VERIFY DISK GROUP SUMMARY
#########################################################################################################
#
function ASM_007() {
sqlplus -S / as sysdba <<EOF
set pages 700 lines 700 timing on long 9999999 numwidth 20 heading on echo on verify on feedback on colsep '|'
prompt ##############################################################
prompt # ASM: VERIFY DISK GROUP SUMMARY
prompt ##############################################################
prompt
col path for a35
col Diskgroup for a15
col DiskName for a20
col disk# for 999
col total_mb for 999,999,999
col free_mb for 999,999,999
compute sum of total_mb on DiskGroup
compute sum of free_mb on DiskGroup
break on DiskGroup skip 1 on report
select a.name DiskGroup
  , b.disk_number Disk
  , b.name DiskName
  , b.os_mb
  , b.total_mb
  , b.free_mb
  , b.path
  , b.header_status
from v\$asm_disk b, v\$asm_diskgroup a
where a.group_number (+) = b.group_number
order by b.group_number, b.disk_number, b.name;
quit;
EOF
}
#
#########################################################################################################
# ASM: VERIFY DISK GROUP USAGE
#########################################################################################################
#
function ASM_008() {
sqlplus -S / as sysdba <<EOF
set pages 700 lines 700 timing on long 9999999 numwidth 20 heading on echo on verify on feedback on colsep '|'
prompt ##############################################################
prompt # ASM: VERIFY DISK GROUP USAGE
prompt ##############################################################
prompt
col diskgroup for a15
col diskname for a15
col path for a35
select a.name DiskGroup
  , b.name DiskName
  , b.header_status
  , b.total_mb
  , (b.total_mb - b.free_mb) Used_MB
  , b.free_mb
  , b.path
from v\$asm_disk b, v\$asm_diskgroup a
where a.group_number (+) = b.group_number
order by b.group_number, b.name;
quit;
EOF
}
#
#########################################################################################################
# ASM: REMOVING ALL ARCHIVELOGS FROM ASM
#########################################################################################################
#
function ASM_009() {
sqlplus -S / as sysdba <<EOF
set pages 700 lines 700 timing on long 9999999 numwidth 20 heading on echo on verify on feedback on colsep '|'
prompt ##############################################################
prompt # ASM: REMOVING ALL ARCHIVELOGS FROM ASM
prompt ##############################################################
prompt
col command for a180
SELECT 'alter diskgroup '||dg.name||' drop file ''+'||dg.name||''||SYS_CONNECT_BY_PATH(al.name,'/')||''';' as command
FROM v\$asm_alias al, v\$asm_file fi, v\$asm_diskgroup dg
WHERE al.file_number = fi.file_number(+)
AND al.group_number = dg.group_number
AND fi.type = 'ARCHIVELOG'
START WITH alias_index = 0
CONNECT BY PRIOR al.reference_index = al.parent_index;
quit;
EOF
}
#
#########################################################################################################
# ASM: VERIFY DISK GROUP SIZE AND USAGE
#########################################################################################################
#
function ASM_010() {
sqlplus -S / as sysdba <<EOF
set pages 700 lines 700 timing on long 9999999 numwidth 20 heading on echo on verify on feedback on colsep '|'
prompt ##############################################################
prompt # ASM: VERIFY DISK GROUP SIZE AND USAGE
prompt ##############################################################
prompt
SELECT name
  , type
  , total_mb
  , free_mb
  , required_mirror_free_mb
  , usable_file_mb 
FROM V\$ASM_DISKGROUP;
quit;
EOF
}
#
#########################################################################################################
# ASM: VERIFY DISK GROUP SIZE AND USAGE DETAILS
#########################################################################################################
#
function ASM_011() {
sqlplus -S / as sysdba <<EOF
set pages 700 lines 700 timing on long 9999999 numwidth 20 heading on echo on verify on feedback on colsep '|'
prompt ##############################################################
prompt # ASM: VERIFY DISK GROUP SIZE AND USAGE DETAILS
prompt ##############################################################
prompt
col name for a15
col lable for a15
col path for a70
select mount_status
  , header_status
  , mode_status
  , state
  , total_mb
  , free_mb
  , name
  , label
  , path
from v\$asm_disk;
quit;
EOF
}
#
#########################################################################################################
# ASM: VERIFY ALL DISKGROUPS CONTENTS
#########################################################################################################
#
function ASM_012() {
sqlplus -S / as sysdba <<EOF
set pages 700 lines 700 timing on long 9999999 numwidth 20 heading on echo on verify on feedback on colsep '|'
prompt ##############################################################
prompt # ASM: VERIFY ALL DISKGROUPS CONTENTS
prompt ##############################################################
prompt
col full_path format a150
col full_alias_path format a150
SELECT concat('+' || gname, sys_connect_by_path(aname, '/')) full_alias_path
FROM (SELECT g.name gname, a.parent_index pindex, a.name aname, a.reference_index rindex FROM v\$asm_alias a, v\$asm_diskgroup g WHERE a.group_number = g.group_number)
START WITH (mod(pindex, power(2, 24))) = 0 
CONNECT BY PRIOR 
rindex = pindex
order by 1;
quit;
EOF
}
#
#########################################################################################################
# ASM: VERIFY OPERATION DETAIL
#########################################################################################################
#
function ASM_013() {
sqlplus -S / as sysdba <<EOF
set pages 700 lines 700 timing on long 9999999 numwidth 20 heading on echo on verify on feedback on colsep '|'
prompt ##############################################################
prompt # ASM: VERIFY OPERATION DETAIL
prompt ##############################################################
prompt
select GROUP_NUMBER
  , OPERATION
  , STATE
  , ACTUAL
  , SOFAR
  , EST_MINUTES 
from v\$asm_operation
quit;
EOF
}
#
#########################################################################################################
# ASM: VERIFY DISKS SIZE AND STATUS
#########################################################################################################
#
function ASM_014() {
sqlplus -S / as sysdba <<EOF
set pages 700 lines 700 timing on long 9999999 numwidth 20 heading on echo on verify on feedback on colsep '|'
prompt ##############################################################
prompt # ASM: VERIFY DISKS SIZE AND STATUS
prompt ##############################################################
prompt
col NAME for a15
select GROUP_NUMBER DG#
  , name
  , ALLOCATION_UNIT_SIZE AU_SZ
  , STATE
  , TYPE
  , TOTAL_MB
  , FREE_MB
  , OFFLINE_DISKS 
from v\$asm_diskgroup;
quit;
EOF
}
#
#########################################################################################################
# ASM: FILES THAT ARE NOTE IN USE CURRENTLY ON ASM DISKS
#########################################################################################################
#
function ASM_015() {
sqlplus -S / as sysdba <<EOF
set pages 700 lines 700 timing on long 9999999 numwidth 20 heading on echo on verify on feedback on colsep '|'
prompt ##############################################################
prompt # ASM: FILES THAT ARE NOTE IN USE CURRENTLY ON ASM DISKS
prompt ##############################################################
prompt
col full_alias_path format a100
col ftype format a20
select * 
from (select x.gnum
        , x.filnum
        , x.full_alias_path
        , f.ftype 
      from (SELECT gnum
              , filnum
              , concat('+'||gname, sys_connect_by_path(aname, '/')) full_alias_path
            FROM (SELECT g.name gname
                    , a.parent_index pindex
                    , a.name aname
                    , a.reference_index rindex
                    , a.group_number gnum
                    , a.file_number filnum
                  FROM v\$asm_alias a, v\$asm_diskgroup g
                  WHERE a.group_number = g.group_number)
START WITH (mod(pindex, power(2, 24))) = 0 CONNECT BY PRIOR rindex = pindex) x,
(select group_number gnum
   , file_number filnum
   , type ftype 
 from v\$asm_file order by group_number,file_number) f
where x.filnum != 4294967295
and x.gnum = f.gnum 
and x.filnum = f.filnum
MINUS
select x.gnum
  , x.filnum
  , x.full_alias_path
  , f.ftype
from (select id1 gnum
        ,id2 filnum 
      from v\$lock 
      where type = 'FA' 
      and (lmode=4 or lmode=2)) l
      , (SELECT gnum
           , filnum
           , concat('+'||gname, sys_connect_by_path(aname, '/')) full_alias_path
         FROM (SELECT g.name gname
                 , a.parent_index pindex
                 , a.name aname
                 , a.reference_index rindex
                 , a.group_number gnum
                 , a.file_number filnum
               FROM v\$asm_alias a, v\$asm_diskgroup g
               WHERE a.group_number = g.group_number)
START WITH (mod(pindex, power(2, 24))) = 0 CONNECT BY PRIOR rindex = pindex) x, 
(select group_number gnum
   , file_number filnum
   , type ftype 
 from v\$asm_file 
 order by group_number,file_number) f
where x.filnum != 4294967295 
and x.gnum = l.gnum
and x.filnum = l.filnum 
and x.gnum = f.gnum 
and x.filnum = f.filnum) q
order by q.gnum, q.ftype;
quit;
EOF
}
#
#########################################################################################################
# ASM: VERIFY DISKS TYPE AND STATUS
#########################################################################################################
#
function ASM_016() {
sqlplus -S / as sysdba <<EOF
set pages 700 lines 700 timing on long 9999999 numwidth 20 heading on echo on verify on feedback on colsep '|'
prompt ##############################################################
prompt # ASM: VERIFY DISKS TYPE AND STATUS
prompt ##############################################################
prompt
col PATH for a60
col DG_NAME for a15
col DG_STATE for a10
col FAILGROUP for a10
select dg.name dg_name
  , dg.state dg_state
  , dg.type
  , d.disk_number dsk_no
  , d.path
  , d.mount_status
  , d.FAILGROUP
  , d.state
from v\$asm_diskgroup dg, v\$asm_disk d
where dg.group_number = d.group_number
order by dg_name, dsk_no;
quit;
EOF
}
#
#########################################################################################################
# ASM: VERIFY DISKS READ AND WRITE VALUES
#########################################################################################################
#
function ASM_017() {
sqlplus -S / as sysdba <<EOF
set pages 700 lines 700 timing on long 9999999 numwidth 20 heading on echo on verify on feedback on colsep '|'
prompt ##############################################################
prompt # ASM: VERIFY DISKS READ AND WRITE VALUES
prompt ##############################################################
prompt
SELECT SUBSTR(dgs.name,1,10) AS diskgroup
  , SUBSTR(ds.name,1,10) AS asmdisk
  , ds.mount_status
  , ds.state
  , ds.reads
  , ds.writes
  , ds.read_time
  , ds.write_time
  , bytes_read
  , bytes_written
FROM V\$ASM_DISKGROUP_STAT dgs, V\$ASM_DISK_STAT ds
WHERE dgs.group_number = ds.group_number;
quit;
EOF
}
#
#########################################################################################################
# ASM: VERIFY FILES IN ASM NOT KNOWN TO DATABASE
#########################################################################################################
#
function ASM_018() {
sqlplus -S / as sysdba <<EOF
set pages 700 lines 700 timing on long 9999999 numwidth 20 heading on echo on verify on feedback on colsep '|'
prompt ##############################################################
prompt # ASM: VERIFY FILES IN ASM NOT KNOWN TO DATABASE
prompt ##############################################################
prompt
col full_alias_path for a120
col file_type for a30
select concat('+'||gname, sys_connect_by_path(aname, '/')) full_alias_path
  , system_created
  , alias_directory
  , file_type
from (select b.name gname
        , a.parent_index pindex
        , a.name aname
        , a.reference_index rindex
        , a.system_created
        , a.alias_directory
        , c.type file_type
      from v\$asm_alias a, v\$asm_diskgroup b, v\$asm_file c
      where a.group_number = b.group_number
      and a.group_number = c.group_number(+)
      and a.file_number = c.file_number(+)
      and a.file_incarnation = c.incarnation(+))
where alias_directory = 'N'
start with (mod(pindex, power(2, 24))) = 0
and rindex in (select a.reference_index from v\$asm_alias a, v\$asm_diskgroup b where a.group_number = b.group_number and (mod(a.parent_index, power(2, 24))) = 0)
connect by prior rindex = pindex;
quit;
EOF
}
#
#########################################################################################################
# ASM: VERIFY DISK GROUP % USAGE
#########################################################################################################
#
function ASM_019() {
sqlplus -S / as sysdba <<EOF
set pages 700 lines 700 timing on long 9999999 numwidth 20 heading on echo on verify on feedback on colsep '|'
prompt ##############################################################
prompt # ASM: VERIFY DISK GROUP % USAGE
prompt ##############################################################
prompt
column "Diskgroup" format A30
column "Imbalance" format 99.9 Heading "Percent|Imbalance"
column "Variance" format 99.9 Heading "Percent|Disk Size|Variance"
column "MinFree" format 999.99 heading "Minimum|Percent|Free"
column "DiskCnt" format 9999 Heading "Disk|Count"
column "Type" format A10 Heading "Diskgroup|Redundancy"
SELECT g.name "Diskgroup"
  , 100*(max((d.total_mb-d.free_mb)/d.total_mb)-min((d.total_mb-d.free_mb)/d.total_mb))/max((d.total_mb-d.free_mb)/d.total_mb) "Imbalance"
  , 100*(max(d.total_mb)-min(d.total_mb))/max(d.total_mb) "Variance"
  , 100*(min(d.free_mb/d.total_mb)) "MinFree"
  , count(*) "DiskCnt"
  , g.type "Type"
FROM v\$asm_disk d, v\$asm_diskgroup g
WHERE d.group_number = g.group_number 
and d.group_number <> 0 
-- and d.state = 'NORMAL' 
and d.mount_status = 'CACHED'
GROUP BY g.name, g.type; 
quit;
EOF
}
#
#########################################################################################################
# ASM: VERIFY DISK GROUPS FREE SPACE
#########################################################################################################
#
function ASM_020() {
sqlplus -S / as sysdba <<EOF
set pages 700 lines 700 timing on long 9999999 numwidth 20 heading on echo on verify on feedback on colsep '|'
prompt ##############################################################
prompt # ASM: VERIFY DISK GROUPS FREE SPACE
prompt ##############################################################
prompt
col name for a30
select NAME
  , ALLOCATION_UNIT_SIZE
  , STATE
  , TYPE
  , TOTAL_MB
  , FREE_MB
  , (FREE_MB/TOTAL_MB)*100 PCt_FREE 
from v\$asm_diskgroup 
order by name, PCt_FREE;
quit;
EOF
}
#
#########################################################################################################
# ASM: 
#########################################################################################################
#
function ASM_021() {
sqlplus -S / as sysdba <<EOF
set pages 700 lines 700 timing on long 9999999 numwidth 20 heading on echo on verify on feedback on colsep '|'
prompt ##############################################################
prompt # 
prompt ##############################################################
prompt

quit;
EOF
}
#
#########################################################################################################
# ASM: VERIFY CANDIDATE DISKS
#########################################################################################################
#
function ASM_022() {
sqlplus -S / as sysdba <<EOF
set pages 700 lines 700 timing on long 9999999 numwidth 20 heading on echo on verify on feedback on colsep '|'
prompt ##############################################################
prompt # ASM: VERIFY CANDIDATE DISKS
prompt ##############################################################
prompt
BREAK ON report ON disk_group_name SKIP 1
col DISK_GROUP_NAME for a20
col DISK_FILE_PATH for a50
col DISK_FILE_FAIL_GROUP for a40
col DISK_FILE_NAME for a25
SELECT NVL(a.name, '[CANDIDATE]') disk_group_name
  , b.path disk_file_path
  , b.name disk_file_name
  , b.failgroup disk_file_fail_group
FROM v\$asm_diskgroup a 
RIGHT OUTER JOIN v\$asm_disk b USING (group_number)
ORDER BY a.name; 
quit;
EOF
}
#
#########################################################################################################
# ASM: VERIFY PATH AND ALOCATED SIZE
#########################################################################################################
#
function ASM_023() {
sqlplus -S / as sysdba <<EOF
set pages 700 lines 700 timing on long 9999999 numwidth 20 heading on echo on verify on feedback on colsep '|'
prompt ##############################################################
prompt # ASM: VERIFY PATH AND ALOCATED SIZE
prompt ##############################################################
prompt
col GROUP_NUMBER format 9999 heading "GRP_NO"
col "GRP_NAME" format a24
col "DSK_NAME" format a24
col path format a80
col ALLOC_MB format 999,999,999
col FREE_MB format 999,999,999
col PCT_FREE format 999.00
select d.GROUP_NUMBER
  , g.name "GRP_NAME"
  , d.name "DSK_NAME"
  , d.path
  , d.OS_MB "ALLOC_MB"
  , d.free_MB "FREE_MB"
  , d.free_MB*100/d.OS_MB "PCT_FREE" 
from V\$asm_disk d, v\$asm_diskgroup g 
where d.GROUP_NUMBER = g.GROUP_NUMBER
order by 1,2,3;
quit;
EOF
}
#
#########################################################################################################
# ASM: EACH FOLDER UTILIZATION IN MB BY DISKGROUP
#########################################################################################################
#
function ASM_024() {
sqlplus -S / as sysdba <<EOF
set pages 700 lines 700 timing on long 9999999 numwidth 20 heading on echo on verify on feedback on colsep '|'
prompt ##############################################################
prompt # ASM: EACH FOLDER UTILIZATION IN MB BY DISKGROUP
prompt ##############################################################
prompt
column inst format a20 heading 'Inst'
column file_type format a20 heading 'File type'
column mg format 99,999,999
break on inst skip 1
compute sum  of mg on inst
whenever sqlerror exit 1
select inst
  , file_type
  , sum(mg) mg 
from (select substr(full_alias_path, 2, instr(full_alias_path, '/', 2, 1)-2) as INST
        , file_type
        , round((szbytes)/1048576) as MG 
      from (select lower(concat('', sys_connect_by_path(aname, '/'))) full_alias_path
              , system_created
              , alias_directory
              , file_type
              , szbytes 
            from (select b.name gname
                    , a.parent_index pindex
                    , a.name aname
                    , a.reference_index rindex
                    , a.system_created
                    , a.alias_directory
                    , c.type file_type
                    , c.bytes szbytes
                  from v\$asm_alias a, v\$asm_diskgroup b, v\$asm_file c
                  where a.group_number = b.group_number
                  and a.group_number = c.group_number(+)
                  and a.file_number = c.file_number(+)
                  and a.file_incarnation = c.incarnation(+))
start with (mod(pindex, power(2, 24))) = 0
and rindex in (select a.reference_index 
               from v\$asm_alias a, v\$asm_diskgroup b 
               where a.group_number = b.group_number 
               and (mod(a.parent_index, power(2, 24))) = 0)
connect by prior rindex = pindex)
where szbytes is not null)
group by inst, file_type;
quit;
EOF
}
#
#########################################################################################################
# ASM: BLOCKER IN ASM
#########################################################################################################
#
function ASM_025() {
sqlplus -S / as sysdba <<EOF
set pages 700 lines 700 timing on long 9999999 numwidth 20 heading on echo on verify on feedback on colsep '|'
select to_char(sysdate, 'DD-MON-YYYY HH24:MI:SS') current_time from dual;
prompt ##############################################################
prompt # ASM: BLOCKER IN ASM
prompt ##############################################################
prompt
column username format a10
column module format a50
column blocker format a7
column waiter format a7
column lmode format 9999
column request format 9999
column inst_id format 9999
column sid format 9999
col username format a6
col sid format 9999
col osuser format a14
col s# format 99999
col server format a10
col client format a10
col pname format a10
select b.inst_id||'/'||b.sid blocker
-- , s.module
  , w.inst_id||'/'||w.sid waiter
  , b.type
  , b.id1
  , b.id2
  , b.lmode
  , w.request
from gv\$lock b, 
(select inst_id
   , sid
   , type
   , id1
   , id2
   , lmode
   , request
from gv\$lock 
where request > 0) w
-- gv\$session s
where b.lmode > 0
and (b.id1 = w.id1 and b.id2 = w.id2 and b.type = w.type)
--and (b.sid = s.sid and b.inst_id = s.inst_id)
order by b.inst_id, b.sid;
quit;
EOF
}
#
#########################################################################################################
# ASM: 
#########################################################################################################
#
function ASM_026() {
sqlplus -S / as sysdba <<EOF
set pages 700 lines 700 timing on long 9999999 numwidth 20 heading on echo on verify on feedback on colsep '|'
prompt ##############################################################
prompt # 
prompt ##############################################################
prompt


quit;
EOF
}
#
#########################################################################################################
# ASM:
#########################################################################################################
#
function ASM_027() {
sqlplus -S / as sysdba <<EOF
set pages 700 lines 700 timing on long 9999999 numwidth 20 heading on echo on verify on feedback on colsep '|'
prompt ##############################################################
prompt # 
prompt ##############################################################
prompt


quit;
EOF
}
#
#########################################################################################################
# ASM:
#########################################################################################################
#
function ASM_028() {
sqlplus -S / as sysdba <<EOF
set pages 700 lines 700 timing on long 9999999 numwidth 20 heading on echo on verify on feedback on colsep '|'
prompt ##############################################################
prompt # 
prompt ##############################################################
prompt


quit;
EOF
}
#

# Monitoring ASM disk performance using IOSTAT
# asmcmd -p iostat -t -G DATA 1
# asmcmd -p iostat -t -G DATA 5
# asmcmd -p iostat -t -G FRA 1
# asmcmd -p iostat -t -G FRA 5


#
#########################################################################################################
# Finish of the System
#########################################################################################################
#
