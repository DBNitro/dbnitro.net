
Author="Andre Augusto Ribas"
SoftwareVersion="1.0.3"
DateCreation="18/08/2021"
DateModification="03/03/2022"
EMAIL_1="dba.ribas@gmail.com"
EMAIL_2="andre.ribas@icloud.com"
WEBSITE="http://dbnitro.net"
#
SepLine() {
  printf '%*s\n' "${COLUMNS:-$(tput cols)}" '' | tr ' ' -  
}
#
SetClear() {
  printf "\033c"
}
#
PDB_HELP() {
SetClear
SepLine
echo -e "\
|#[ PDB_001 ] PDB: VERIFY PLUGGABLE DATABASES                         |#|[ PDB_002 ] PDB: VERIFY VIOLATIONS ON PDBS               |#|
|#[ PDB_003 ] PDB: VERIFY SNAPSHOTS ON PDBS                           |#|[ PDB_004 ] PDB: VERIFY PROPERTIES OF SNAPSHOTS ON PDBS  |#|
|#[ PDB_005 ] PDB: VERIFY AVAILABILITY OF SNAPSHOTS ON PDBS           |#|[ PDB_006 ] PDB: VERIFY SNAPSHOT JOBS ON PDB             |#|
|#[ PDB_007 ] PDB: VERIFY SNAPSHOT REFRESH ON PDBS                    |#|[ PDB_008 ] PDB: VERIFY THE HISTORY OF PDBS              |#|
|#[ PDB_009 ] PDB: CHECK UNDO MODE                                    |#|[ PDB_010 ] PDB: CHECK STARTUP AND UPTIME OF ALL PDBS    |#|
|#[ PDB_011 ] PDB: CHECK UPTIME OF ALL PDBS                           |#|[ PDB_012 ] PDB: CHECK CREATION TIME AND STATUS          |#|
|#[ PDB_013 ] PDB: VERIFY SIZE AND STATUS OF DATABASES                |#|[ PDB_014 ] PDB: VERIFY SIZE BY DATABASES                |#|
|#[ PDB_015 ] PDB: CHECK PRORPERTIES AND VALUES                       "
SepLine
}
#
#########################################################################################################
#
# CDB PDB Funtions
#
#########################################################################################################
# PDB: VERIFY PLUGGABLE DATABASES
#########################################################################################################
#
PDB_001() {
sqlplus -S / as sysdba <<EOF
set pages 700 lines 700 timing on long 9999999 numwidth 20 heading on echo on verify on feedback on colsep '|'
prompt ##############################################################
prompt # PDB: VERIFY PLUGGABLE DATABASES
prompt ##############################################################
col NAME for a30
select CON_ID
  , NAME
  , OPEN_MODE
  , DBID
  , CON_UID
  , GUID 
FROM V\$CONTAINERS 
ORDER BY CON_ID;
quit;
EOF
}
#
#########################################################################################################
# PDB: VERIFY VIOLATIONS ON PDBS
#########################################################################################################
#
PDB_002() {
sqlplus -S / as sysdba <<EOF
set pages 700 lines 700 timing on long 9999999 numwidth 20 heading on echo on verify on feedback on colsep '|'
prompt ##############################################################
prompt # PDB: VERIFY VIOLATIONS ON PDBS
prompt ##############################################################
col time for a20
col message for a180
select to_char(time, 'dd/mm/yyyy hh24:mi:ss') as time
  , substr(message, 1,180) as message
from pdb_plug_in_violations;
quit;
EOF
}
#
#########################################################################################################
# PDB: VERIFY SNAPSHOTS ON PDBS
#########################################################################################################
#
PDB_003() {
sqlplus -S / as sysdba <<EOF
set pages 700 lines 700 timing on long 9999999 numwidth 20 heading on echo on verify on feedback on colsep '|'
prompt ##############################################################
prompt # PDB: VERIFY SNAPSHOTS ON PDBS
prompt ##############################################################
col pdb_name for a10
col snapshot_mode for a15
select p.con_id
  , p.pdb_name
  , p.snapshot_mode
  , p.snapshot_interval
FROM cdb_pdbs p
ORDER BY 1;
quit;
EOF
}
#
#########################################################################################################
# PDB: VERIFY PROPERTIES OF SNAPSHOTS ON PDBS
#########################################################################################################
#
PDB_004() {
sqlplus -S / as sysdba <<EOF
set pages 700 lines 700 timing on long 9999999 numwidth 20 heading on echo on verify on feedback on colsep '|'
prompt ##############################################################
prompt # PDB: VERIFY PROPERTIES OF SNAPSHOTS ON PDBS
prompt ##############################################################
col property_name for a20
col pdb_name for a10
col property_value for a15
col description for a50
select pr.con_id
  , p.pdb_name
  , pr.property_name
  , pr.property_value
  , pr.description 
FROM cdb_properties pr
JOIN cdb_pdbs p ON pr.con_id = p.con_id 
WHERE pr.property_name = 'MAX_PDBA_SNAPSHOTS' 
ORDER BY pr.property_name;
quit;
EOF
}
#
#########################################################################################################
# PDB: VERIFY AVAILABILITY OF SNAPSHOTS ON PDBS
#########################################################################################################
#
PDB_005() {
sqlplus -S / as sysdba <<EOF
set pages 700 lines 700 timing on long 9999999 numwidth 20 heading on echo on verify on feedback on colsep '|'
prompt ##############################################################
prompt # PDB: VERIFY AVAILABILITY OF SNAPSHOTS ON PDBS
prompt ##############################################################
col con_name for a10
col snapshot_name for a30
col snapshot_scn for 9999999
col full_snapshot_path for a50
select con_id
  , con_name
  , snapshot_name
  , snapshot_scn
  , full_snapshot_path 
FROM cdb_pdb_snapshots
ORDER BY con_id, snapshot_scn;
quit;
EOF
}
#
#########################################################################################################
# PDB: VERIFY SNAPSHOT JOBS ON PDB
#########################################################################################################
#
PDB_006() {
sqlplus -S / as sysdba <<EOF
set pages 700 lines 700 timing on long 9999999 numwidth 20 heading on echo on verify on feedback on colsep '|'
prompt ##############################################################
prompt # PDB: VERIFY SNAPSHOT JOBS ON PDB
prompt ##############################################################
col owner for a10
col job_name for a30
col repeat_interval for a50
select owner
  , job_name
  , repeat_interval
FROM dba_scheduler_jobs
WHERE job_name LIKE '%SNAPSHOT'
ORDER BY owner, job_name;
quit;
EOF
}
#
#########################################################################################################
# PDB: VERIFY SNAPSHOT REFRESH ON PDBS
#########################################################################################################
#
PDB_007() {
sqlplus -S / as sysdba <<EOF
set pages 700 lines 700 timing on long 9999999 numwidth 20 heading on echo on verify on feedback on colsep '|'
prompt
prompt ##############################################################
prompt # PDB: VERIFY SNAPSHOT REFRESH ON PDBS
prompt ##############################################################
col pdb_name for a15
select pdb_id
  , pdb_name
  , status
  , refresh_mode
  , logging
from dba_pdbs
order by 1,2,3;
quit;
EOF
}
#
#########################################################################################################
# PDB: VERIFY THE HISTORY OF PDBS
#########################################################################################################
#
PDB_008() {
sqlplus -S / as sysdba <<EOF
set pages 700 lines 700 timing on long 9999999 numwidth 20 heading on echo on verify on feedback on colsep '|'
prompt ##############################################################
prompt # PDB: VERIFY THE HISTORY OF PDBS
prompt ##############################################################
col db_name for a10 
col CLONED_FROM_PDB_NAME for a25 
col pdb_name for a18 
select DB_NAME
  , CON_ID
  , PDB_NAME
  , OPERATION
  , to_char(OP_TIMESTAMP, 'dd/mm/yyyy hh24:mi:ss') as time
  , CLONED_FROM_PDB_NAME
FROM CDB_PDB_HISTORY
order by con_id;
quit;
EOF
}
#
#########################################################################################################
# PDB: CHECK UNDO MODE
#########################################################################################################
#
PDB_009() {
sqlplus -S / as sysdba <<EOF
set pages 700 lines 700 timing on long 9999999 numwidth 20 heading on echo on verify on feedback on colsep '|'
prompt ##############################################################
prompt # PDB: CHECK UNDO MODE
prompt ##############################################################
col property_name for a30
col property_value for a15
col description for a40
select * from database_properties where property_name = 'LOCAL_UNDO_ENABLED';
quit;
EOF
}
#
#########################################################################################################
# PDB: CHECK STARTUP AND UPTIME OF ALL PDBS
#########################################################################################################
#
PDB_010() {
sqlplus -S / as sysdba <<EOF
set pages 700 lines 700 timing on long 9999999 numwidth 20 heading on echo on verify on feedback on colsep '|'
prompt ##############################################################
prompt # PDB: CHECK STARTUP AND UPTIME OF ALL PDBS
prompt ##############################################################
col name for a20
col open_time for a33
select con_id
  , name
  , dbid
  , open_mode
  , to_char(open_time, 'dd/mm/yyyy hh24:mi:ss') as open_time
from v\$containers
order by 1,2,3;
quit;
EOF
}
#
#########################################################################################################
# PDB: CHECK UPTIME OF ALL PDBS
#########################################################################################################
#
PDB_011() {
sqlplus -S / as sysdba <<EOF
set pages 700 lines 700 timing on long 9999999 numwidth 20 heading on echo on verify on feedback on colsep '|'
prompt ##############################################################
prompt # PDB: CHECK UPTIME OF ALL PDBS
prompt ##############################################################
col name for a20
col "database uptime" for a30
select name
  , floor(sysdate-cast(open_time as date)) || ' Days ' || floor(((sysdate-cast(open_time as date))-floor(sysdate-cast(open_time as date)))*24) || ' hours ' || round(((sysdate-cast(open_time as date)-floor(sysdate-cast(open_time as date))*24)-floor((sysdate-cast(open_time as date)-floor(sysdate-cast(open_time as date))*24)))*60) || ' minutes ' "Database Uptime" 
from v\$containers;
quit;
EOF
}
#
#########################################################################################################
# PDB: CHECK CREATION TIME AND STATUS
#########################################################################################################
#
PDB_012() {
sqlplus -S / as sysdba <<EOF
set pages 700 lines 700 timing on long 9999999 numwidth 20 heading on echo on verify on feedback on colsep '|'
prompt ##############################################################
prompt # PDB: CHECK CREATION TIME AND STATUS
prompt ##############################################################
col pdb_name for a30
select pdb_name
  , to_char(creation_time, 'dd/mm/yyyy hh24:mi:ss') as creation_time
  , status 
from dba_pdbs
order by 1,2,3;
quit;
EOF
}

#
#########################################################################################################
# PDB: VERIFY SIZE AND STATUS OF DATABASES
#########################################################################################################
#
PDB_013() {
sqlplus -S / as sysdba <<EOF
set pages 700 lines 700 timing on long 9999999 numwidth 20 heading on echo on verify on feedback on colsep '|'
prompt ##############################################################
prompt # PDB: VERIFY SIZE AND STATUS OF DATABASES
prompt ##############################################################
COL NAME FOR A30
select name
  , open_mode
  , restricted
  , to_char(creation_time, 'DD/MM/YYYY HH24:MI:SS') as created
  , total_size/1024/1024/1024 as GB
from v\$PDBS
order by 1,2,3;
quit;
EOF
}
#
#########################################################################################################
# PDB: VERIFY SIZE BY DATABASES
#########################################################################################################
#
PDB_014() {
sqlplus -S / as sysdba <<EOF
set pages 700 lines 700 timing on long 9999999 numwidth 20 heading on echo on verify on feedback on colsep '|'
prompt ##############################################################
prompt # PDB: VERIFY SIZE BY DATABASES
prompt ##############################################################
col name for a20
select con_id
  , name
  , SUM(SIZE_MB) 
from (select c.con_id
        , nvl(p.name, 'CDB') name
        , sum(bytes)/1024/1024 SIZE_MB 
      from cdb_data_files c, v\$pdbs p 
      where c.con_id = p.con_id(+) 
      GROUP BY c.con_id,name
UNION
select c.con_id
  , nvl(p.name, 'CDB') name
  , sum(bytes)/1024/1024 SIZE_MB 
from cdb_temp_files c, v\$pdbs p 
where c.con_id = p.con_id(+) 
GROUP BY c.con_id,name)
group by con_id,name
order by con_id;
quit;
EOF
}
#
#########################################################################################################
# PDB: CHECK PRORPERTIES AND VALUES
#########################################################################################################
#
PDB_015() {
sqlplus -S / as sysdba <<EOF
set pages 700 lines 700 timing on long 9999999 numwidth 20 heading on echo on verify on feedback on colsep '|'
prompt ##############################################################
prompt # PDB: CHECK PRORPERTIES AND VALUES
prompt ##############################################################
col property_name for a35
col pdb_name for a50
col property_value for a35
col description for a100
select CON_ID 
  , PROPERTY_NAME
  , PROPERTY_VALUE
  , DESCRIPTION
FROM cdb_properties 
order by 1,2,3;
quit;
EOF
}








#
#########################################################################################################
# Finish of the System
#########################################################################################################
#